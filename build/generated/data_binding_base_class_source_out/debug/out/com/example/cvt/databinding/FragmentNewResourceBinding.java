// Generated by view binder compiler. Do not edit!
package com.example.cvt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cvt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewResourceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCreate;

  @NonNull
  public final Button btnUpload;

  @NonNull
  public final EditText resourceAttachment;

  @NonNull
  public final EditText resourceContent;

  @NonNull
  public final EditText resourceTitle;

  private FragmentNewResourceBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnCreate,
      @NonNull Button btnUpload, @NonNull EditText resourceAttachment,
      @NonNull EditText resourceContent, @NonNull EditText resourceTitle) {
    this.rootView = rootView;
    this.btnCreate = btnCreate;
    this.btnUpload = btnUpload;
    this.resourceAttachment = resourceAttachment;
    this.resourceContent = resourceContent;
    this.resourceTitle = resourceTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewResourceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewResourceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_resource, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewResourceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_create;
      Button btnCreate = ViewBindings.findChildViewById(rootView, id);
      if (btnCreate == null) {
        break missingId;
      }

      id = R.id.btn_upload;
      Button btnUpload = ViewBindings.findChildViewById(rootView, id);
      if (btnUpload == null) {
        break missingId;
      }

      id = R.id.resource_attachment;
      EditText resourceAttachment = ViewBindings.findChildViewById(rootView, id);
      if (resourceAttachment == null) {
        break missingId;
      }

      id = R.id.resource_content;
      EditText resourceContent = ViewBindings.findChildViewById(rootView, id);
      if (resourceContent == null) {
        break missingId;
      }

      id = R.id.resource_title;
      EditText resourceTitle = ViewBindings.findChildViewById(rootView, id);
      if (resourceTitle == null) {
        break missingId;
      }

      return new FragmentNewResourceBinding((ConstraintLayout) rootView, btnCreate, btnUpload,
          resourceAttachment, resourceContent, resourceTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
